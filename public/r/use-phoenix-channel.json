{
  "name": "use-phoenix-channel",
  "type": "registry:hook",
  "dependencies": [
    "phoenix"
  ],
  "files": [
    {
      "path": "hooks/use-phoenix-channel.ts",
      "content": "import type { Channel, Socket } from \"phoenix\";\nimport { useEffect, useState } from \"react\";\n\nexport function usePhoenixChannel(\n\tsocket: Socket | null,\n\tchannelName: string,\n\tcallbacks: Record<string, (payload: any) => void>,\n) {\n\tconst [channel, setChannel] = useState<Channel | null>(null);\n\n\tuseEffect(() => {\n\t\tif (!socket) return;\n\n\t\tconst phoenixChannel = socket.channel(channelName);\n\n\t\t// register callbacks\n\t\tObject.entries(callbacks).forEach(([event, callback]) => {\n\t\t\tphoenixChannel.on(event, callback);\n\t\t});\n\n\t\tphoenixChannel.join().receive(\"ok\", () => {\n\t\t\tsetChannel(phoenixChannel);\n\t\t});\n\n\t\treturn () => {\n\t\t\tphoenixChannel.leave();\n\t\t};\n\t}, [socket, channelName]);\n\n\treturn channel;\n}\n",
      "type": "registry:hook",
      "target": ""
    }
  ]
}